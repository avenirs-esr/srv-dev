cas.server.name=__DYN_AVENIRS_CAS_SERVER_NAME__
cas.server.prefix=${cas.server.name}/cas
cas.authn.oidc.core.issuer=${cas.server.prefix}/oidc
cas.authn.oidc.core.accepted-issuers-pattern=https:\/\/(avenirs-apache|localhost|srv-dev-avenirs?(\\.srv-avenir\\.brgm\\.recia\\.net)?)(:8443)?\/cas\/.*

cas.logout.follow-service-redirects=true

logging.config=file:/etc/cas/config/log4j2.xml

cas.authn.accept.users=

### Connexion LDAP
### obso cas.authn.ldap[0].providerClass=org.ldaptive.provider.unboundid.UnboundIDProvider
cas.authn.ldap[0].type=AUTHENTICATED
cas.authn.ldap[0].ldapUrl=ldap://__DYN_AVENIRS_OPENLDAP_CONTAINER_NAME__:389
cas.authn.ldap[0].baseDn=dc=ldap-dev,dc=avenirs-esr,dc=fr
cas.authn.ldap[0].subtreeSearch=true
cas.authn.ldap[0].searchFilter=uid=\{user\}
#cas.authn.ldap[0].principalAttributeList=cn,givenName,mail, 
cas.authn.ldap[0].principalAttributeList=cn,mail,sn,uid,givenName,displayName
### Credential to connect to LDAP
cas.authn.ldap[0].bindDn=cn=admin,dc=ldap-dev,dc=avenirs-esr,dc=fr
cas.authn.ldap[0].bindCredential=admin
### obso cas.authn.ldap[0].useSsl=false

cas.authn.oidc.core.claims-map.email=mail
cas.authn.oidc.core.claims-map.given_name=givenName
cas.authn.oidc.core.claims-map.family_name=sn

cas.authn.oidc.id-token.include-id-token-claims=false
cas.authn.oauth.access-token.crypto.enabled=true
cas.authn.oauth.access-token.crypto.encryption-enabled=true



cas.serviceRegistry.json.location=file:/etc/cas/services
cas.service-registry.json.watcher-enabled=true

cas.authn.oidc.discovery.scopes=openid,profile,email
#cas.authn.oidc.discovery.claims=family_name,given_name,email, mail, cn,givenName,sn,displayName,isMemberOf
cas.authn.oidc.discovery.claims=family_name,given_name,email

#cas.interrupt.core.force-execution=true
#cas.interrupt.groovy.location=file:/etc/cas/config/interrupt/interrupt-inquirer.groovy
#cas.interrupt.core.trigger-mode=AFTER_SSO

cas.audit.slf4j.use-single-line=true


cas.tgc.crypto.encryption.key=__SEC_CAS_TGC_CRYPTO_ENCRYPTION_KEY__
cas.tgc.crypto.signing.key=__SEC_CAS_TGC_CRYPTO_SIGNING_KEY__
cas.webflow.crypto.signing.key=__SEC_CAS_WEBFLOW_CRYPTO_SIGNING_KEY__
cas.webflow.crypto.encryption.key=__SEC_CAS_WEBFLOW_CRYPTO_ENCRYPTION_KEY__
cas.authn.oauth.crypto.encryption.key=__SEC_CAS_AUTHN_OAUTH_CRYPTO_ENCRYPTION_KEY__
cas.authn.oauth.crypto.signing.key=__SEC_CAS_AUTHN_OAUTH_CRYPTO_SIGNING_KEY__
cas.authn.oauth.access-token.crypto.encryption.key=__SEC_CAS_AUTHN_OAUTH_ACCESS_TOKEN_CRYPTO_ENCRYPTION_KEY__
cas.authn.oauth.access-token.crypto.signing.key=__SEC_CAS_AUTHN_OAUTH_ACCESS_TOKEN_CRYPTO_SIGNING_KEY__

spring.security.user.name=casuser
spring.security.user.password=__SEC_CAS_SPRING_SECURITY_USER_PASSWORD__



### Actuators - dependency for actuators has to be added in  build.gradle

### Activate all the actuators
#management.endpoints.web.exposure.include=*
#management.endpoints.enabled-by-default=true
###

### Activate specific actuators
#management.endpoints.web.exposure.include=status, releaseAttributes, resolveAttributes, registeredServices
#management.endpoint.status.enabled=true
#management.endpoint.releaseAttributes.enabled=true
#management.endpoint.resolveAttributes.enabled=true
#management.endpoint.registeredService.enabled=true
#cas.monitor.endpoints.endpoint.defaults.access=AUTHENTICATED

###