# #! /bin/bash

#----------------------------------------#
# Bootstrap script for Avenirs portfolio #
#                                        #
#----------------------------------------#

AVENIRS_PORTFOLIO_SCRIPT_DIR=`dirname $0`

# Initialization
. $AVENIRS_PORTFOLIO_SCRIPT_DIR/../../../scripts/srv-dev-commons.sh
init_commons $*
info "Avenirs portfolio bootstrapping started."

. $AVENIRS_PORTFOLIO_SCRIPT_DIR/avenirs-portfolio-env.sh $AVENIRS_PORTFOLIO_SCRIPT_DIR 2> /dev/null \
    || err "Unable to source $AVENIRS_PORTFOLIO_SCRIPT_DIR/avenirs-portfolio-env.sh"

# Network check
check_network

# .env file generation
echo "JASYPT_ENCRYPTOR_PASSWORD=$JASYPT_ENCRYPTOR_PASSWORD" > $AVENIRS_PORTFOLIO_ENV_FILE
echo "AVENIRS_PORTFOLIO_API_CONTAINER_NAME=$AVENIRS_PORTFOLIO_API_CONTAINER_NAME" >> $AVENIRS_PORTFOLIO_ENV_FILE
echo "AVENIRS_PORTFOLIO_API_CONTAINER_PORT=$AVENIRS_PORTFOLIO_API_CONTAINER_PORT" >> $AVENIRS_PORTFOLIO_ENV_FILE
echo "AVENIRS_PORTFOLIO_API_VERSION=$AVENIRS_PORTFOLIO_API_VERSION" >> $AVENIRS_PORTFOLIO_ENV_FILE
echo "AVENIRS_PORTFOLIO_API_OVERLAY_DIR=$AVENIRS_PORTFOLIO_API_OVERLAY_DIR" >> $AVENIRS_PORTFOLIO_ENV_FILE
echo "AVENIRS_PORTFOLIO_API_OVERLAY_BASENAME=$AVENIRS_PORTFOLIO_API_OVERLAY_BASENAME" >> $AVENIRS_PORTFOLIO_ENV_FILE
echo "AVENIRS_PORTFOLIO_API_SPRING_ENV_FILE=$AVENIRS_PORTFOLIO_API_SPRING_ENV_FILE" >> $AVENIRS_PORTFOLIO_ENV_FILE

# Spring env file generation
echo "spring.datasource.url=jdbc:postgresql://$AVENIRS_POSTGRESQL_PRIMARY_CONTAINER_NAME:5432/avenirs_api" > $AVENIRS_PORTFOLIO_API_SPRING_ENV_FILE;
echo "seeder.enabled=true" >> $AVENIRS_PORTFOLIO_API_SPRING_ENV_FILE;
[ "`hostname`" = "srv-dev-avenir" ] && swagger_root="srv-dev-avenir.srv-avenir.brgm.recia.net" || swagger_root="localhost"
echo "app.server.url=http://$swagger_root/avenirs-portfolio-api" >> $AVENIRS_PORTFOLIO_API_SPRING_ENV_FILE;
echo "logging.level.org.springframework.web=DEBUG" >> $AVENIRS_PORTFOLIO_API_SPRING_ENV_FILE;
echo "logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG" >> $AVENIRS_PORTFOLIO_API_SPRING_ENV_FILE;
echo "logging.level.org.springframework.security=DEBUG" >> $AVENIRS_PORTFOLIO_API_SPRING_ENV_FILE;
echo "logging.level.org.springframework.security.web.FilterChainProxy=DEBUG" >> $AVENIRS_PORTFOLIO_API_SPRING_ENV_FILE;


# Overlay files
echo "install_overlay $AVENIRS_PORTFOLIO_API_OVERLAY_DIR $AVENIRS_PORTFOLIO_API_REPOSITORY_DIR"
install_overlay $AVENIRS_PORTFOLIO_API_OVERLAY_DIR $AVENIRS_PORTFOLIO_API_REPOSITORY_DIR


# ---- avernirs-cofolio-client
echo "AVENIRS_COFOLIO_CLIENT_CONTAINER_NAME=$AVENIRS_COFOLIO_CLIENT_CONTAINER_NAME" >> $AVENIRS_PORTFOLIO_ENV_FILE
echo "AVENIRS_COFOLIO_CLIENT_CONTAINER_PORT=$AVENIRS_COFOLIO_CLIENT_CONTAINER_PORT" >> $AVENIRS_PORTFOLIO_ENV_FILE
echo "AVENIRS_COFOLIO_CLIENT_OVERLAY_DIR=$AVENIRS_COFOLIO_CLIENT_OVERLAY_DIR" >> $AVENIRS_PORTFOLIO_ENV_FILE
echo "AVENIRS_COFOLIO_CLIENT_OVERLAY_BASENAME=$AVENIRS_COFOLIO_CLIENT_OVERLAY_BASENAME" >> $AVENIRS_PORTFOLIO_ENV_FILE

# env file generation
echo "VITE_API_URL=$AVENIRS_PORTFOLIO_BACKEND_URL" > $AVENIRS_COFOLIO_CLIENT_ENV_FILE
echo "VITE_ENABLE_MSW=false" >> $AVENIRS_COFOLIO_CLIENT_ENV_FILE
echo "VITE_BASE_PATH=/cofolio/" >> $AVENIRS_COFOLIO_CLIENT_ENV_FILE
echo "VITE_AVENIR_ESR_ACCESS_TOKEN=AT-20-a29sDr2iCnLiog-RRDVpuBII5cd4WD8r" >> $AVENIRS_COFOLIO_CLIENT_ENV_FILE

echo "install_overlay $AVENIRS_COFOLIO_CLIENT_OVERLAY_DIR $AVENIRS_COFOLIO_CLIENT_REPOSITORY_DIR"
install_overlay $AVENIRS_COFOLIO_CLIENT_OVERLAY_DIR $AVENIRS_COFOLIO_CLIENT_REPOSITORY_DIR


# ---- avenirs-portfolio-security
init_git_repository $AVENIRS_PORTFOLIO_SECURITY_REPOSITORY_DIR $AVENIRS_PORTFOLIO_SECURITY_REMOTE_BRANCH $AVENIRS_PORTFOLIO_SECURITY_LOCAL_BRANCH

# Network check
check_network


# .env file generation
echo "AVENIRS_PORTFOLIO_SECURITY_CONTAINER_NAME=$AVENIRS_PORTFOLIO_SECURITY_CONTAINER_NAME" >> $AVENIRS_PORTFOLIO_ENV_FILE
echo "AVENIRS_PORTFOLIO_SECURITY_CONTAINER_PORT=$AVENIRS_PORTFOLIO_SECURITY_CONTAINER_PORT" >> $AVENIRS_PORTFOLIO_ENV_FILE
echo "AVENIRS_PORTFOLIO_SECURITY_VERSION=$AVENIRS_PORTFOLIO_SECURITY_VERSION" >> $AVENIRS_PORTFOLIO_ENV_FILE
echo "AVENIRS_PORTFOLIO_SECURITY_OVERLAY_DIR=$AVENIRS_PORTFOLIO_SECURITY_OVERLAY_DIR" >> $AVENIRS_PORTFOLIO_ENV_FILE
echo "AVENIRS_PORTFOLIO_SECURITY_OVERLAY_BASENAME=$AVENIRS_PORTFOLIO_SECURITY_OVERLAY_BASENAME" >> $AVENIRS_PORTFOLIO_ENV_FILE
echo "AVENIRS_PORTFOLIO_SECURITY_SPRING_ENV_FILE=$AVENIRS_PORTFOLIO_SECURITY_SPRING_ENV_FILE" >> $AVENIRS_PORTFOLIO_ENV_FILE

# Spring env file generation
echo "spring.datasource.url=jdbc:postgresql://$AVENIRS_POSTGRESQL_PRIMARY_CONTAINER_NAME:5432/avenirs_access_control" > $AVENIRS_PORTFOLIO_SECURITY_SPRING_ENV_FILE;

[ "`hostname`" = "srv-dev-avenir" ] && swagger_root="srv-dev-avenir.srv-avenir.brgm.recia.net" || swagger_root="localhost"
echo "app.server.url=http://$swagger_root/avenirs-portfolio-security" >> $AVENIRS_PORTFOLIO_SECURITY_SPRING_ENV_FILE;

# Overlay files
echo "install_overlay $AVENIRS_PORTFOLIO_SECURITY_OVERLAY_DIR $AVENIRS_PORTFOLIO_SECURITY_REPOSITORY_DIR"
install_overlay $AVENIRS_PORTFOLIO_SECURITY_OVERLAY_DIR $AVENIRS_PORTFOLIO_SECURITY_REPOSITORY_DIR


# Database initialization files generation
info "Database initialization files generation for avenirs-portfolio-security"

cat $AVENIRS_PORTFOLIO_SECURITY_CLEAN_DB  > $AVENIRS_PORTFOLIO_SECURITY_CLEAN_DB_CLEAR
vverbose "Created $AVENIRS_PORTFOLIO_SECURITY_CLEAN_DB_CLEAR"

cat $AVENIRS_PORTFOLIO_SECURITY_CLEAN_TEST_DB  > $AVENIRS_PORTFOLIO_SECURITY_CLEAN_TEST_DB_CLEAR
vverbose "Created $AVENIRS_PORTFOLIO_SECURITY_CLEAN_TEST_DB_CLEAR"

$JASYPT_UTIL_SCRIPT $AVENIRS_PORTFOLIO_SECURITY_INIT_DB > $AVENIRS_PORTFOLIO_SECURITY_INIT_DB_CLEAR
vverbose "Created $AVENIRS_PORTFOLIO_SECURITY_INIT_DB_CLEAR"

$JASYPT_UTIL_SCRIPT $AVENIRS_PORTFOLIO_SECURITY_INIT_TEST_DB > $AVENIRS_PORTFOLIO_SECURITY_INIT_TEST_DB_CLEAR
vverbose "Created $AVENIRS_PORTFOLIO_SECURITY_INIT_TEST_DB_CLEAR"


info "Avenirs portfolio security databases initialization files generated."

info "Database initialization files generation for avenirs-portfolio-api"

cat $AVENIRS_PORTFOLIO_API_CLEAN_DB  > $AVENIRS_PORTFOLIO_API_CLEAN_DB_CLEAR
vverbose "Created $AVENIRS_PORTFOLIO_API_CLEAN_DB_CLEAR"

$JASYPT_UTIL_SCRIPT $AVENIRS_PORTFOLIO_API_INIT_DB > $AVENIRS_PORTFOLIO_API_INIT_DB_CLEAR
vverbose "Created $AVENIRS_PORTFOLIO_API_INIT_DB_CLEAR"

info "Avenirs portfolio api databases initialization files generated."

info "Avenirs portfolio bootstrapping completed."


